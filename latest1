import boto3
import csv
from datetime import datetime
from botocore.exceptions import ClientError
from concurrent.futures import ThreadPoolExecutor
import threading

def extract_db_details(db_instance):
    db_identifier = db_instance.get('DBInstanceIdentifier', 'Not Configured')
    
    db_details = {
        'DBIdentifier': db_identifier,
        'Status': db_instance.get('DBInstanceStatus', 'Not Configured'),
        'Role': db_instance.get('IAMDatabaseAuthenticationEnabled', 'Not Configured'),
        'Engine': db_instance.get('Engine', 'Not Configured'),
        'Size': str(db_instance.get('AllocatedStorage', 'Not Configured')),
        'CPU': str(db_instance.get('DbInstanceClass', 'Not Configured')),
    }

    return db_details

def get_rds_instances():
    try:
        response = rds_client.describe_db_instances()
        return response['DBInstances']
    except ClientError as e:
        print(f"Error retrieving RDS instances: {e}")
        return []

def process_rds_instance(instance):
    db_details = extract_db_details(instance)

    with csv_lock:
        writer.writerow(db_details)

    print(f"Exported details for RDS instance: {db_details['DBIdentifier']}")

# The rest of your code remains unchanged
def main():
    try:
        # Replace 'your-region' with your AWS region
        region = 'us-east-2'
        rds_client = boto3.client('rds', region_name=region)
        
        instances = rds_client.describe_db_instances()['DBInstances']

        timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
        filename = f'rds_insights_{timestamp}.csv'

        fieldnames = [
            'DBIdentifier', 'Status', 'Role', 'Engine', 'Region', 'Size', 'CPU',
        ]

        with open(filename, 'w', newline='') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            writer.writeheader()

            for instance in instances:
                insights = get_rds_insights(rds_client, instance['DBInstanceIdentifier'])
                if insights:
                    writer.writerow(insights)
                    print(f"Exported details for RDS instance: {insights['DBIdentifier']}")

        print(f'Completed checking and exporting RDS insights to {filename}.')
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
