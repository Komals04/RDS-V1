import boto3
import csv
from datetime import datetime

def get_rds_info():
    # Initialize the RDS client
    rds_client = boto3.client('rds')

    # Get a list of RDS instances
    response = rds_client.describe_db_instances()

    # Create a CSV file to store the information
    timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
    filename = f'rds_instance_details_{timestamp}.csv'

    fieldnames = [
        'DBInstanceIdentifier', 'DBInstanceClass', 'AllocatedStorage', 'Engine',
        'MultiAZ', 'Iops', 'StorageType', 'EngineVersion', 'AutoScaling', 'MinStorageSize', 'MaxStorageSize',
        'SecurityGroups'
    ]

    with open(filename, 'w', newline='') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()

        # Loop through each RDS instance
        for instance in response['DBInstances']:
            instance_info = {
                'DBInstanceIdentifier': instance['DBInstanceIdentifier'],
                'DBInstanceClass': instance['DBInstanceClass'],
                'AllocatedStorage': instance['AllocatedStorage'],
                'Engine': instance['Engine'],
                'MultiAZ': instance['MultiAZ'],
                'Iops': instance.get('Iops', 'Not provisioned IOPS'),
                'StorageType': instance['StorageType'],
                'EngineVersion': instance['EngineVersion'],
                'AutoScaling': instance.get('ScalingConfiguration', {}).get('AutoPause', 'Not Enabled'),
                'MinStorageSize': instance.get('ScalingConfiguration', {}).get('MinStorageSize', 'N/A'),
                'MaxStorageSize': instance.get('ScalingConfiguration', {}).get('MaxStorageSize', 'N/A'),
                'SecurityGroups': ', '.join([group['VpcSecurityGroupId'] for group in instance.get('VpcSecurityGroups', [])]),
            }

            writer.writerow(instance_info)

    print(f'RDS instance details exported to {filename}')

if __name__ == "__main__":
    get_rds_info()


C:\Users\ux186612\Documents>python "RDS list.py"
Traceback (most recent call last):
  File "C:\Users\ux186612\Documents\RDS list.py", line 48, in <module>
    get_rds_info()
  File "C:\Users\ux186612\Documents\RDS list.py", line 7, in get_rds_info
    rds_client = boto3.client('rds')
  File "C:\Program Files\Python310\lib\site-packages\boto3\__init__.py", line 92, in client
    return _get_default_session().client(*args, **kwargs)
  File "C:\Program Files\Python310\lib\site-packages\boto3\session.py", line 299, in client
    return self._session.create_client(
  File "C:\Program Files\Python310\lib\site-packages\botocore\session.py", line 997, in create_client
    client = client_creator.create_client(
  File "C:\Program Files\Python310\lib\site-packages\botocore\client.py", line 161, in create_client
    client_args = self._get_client_args(
  File "C:\Program Files\Python310\lib\site-packages\botocore\client.py", line 508, in _get_client_args
    return args_creator.get_client_args(
  File "C:\Program Files\Python310\lib\site-packages\botocore\args.py", line 100, in get_client_args
    final_args = self.compute_client_args(
  File "C:\Program Files\Python310\lib\site-packages\botocore\args.py", line 219, in compute_client_args
    endpoint_config = self._compute_endpoint_config(
  File "C:\Program Files\Python310\lib\site-packages\botocore\args.py", line 369, in _compute_endpoint_config
    return self._resolve_endpoint(**resolve_endpoint_kwargs)
  File "C:\Program Files\Python310\lib\site-packages\botocore\args.py", line 474, in _resolve_endpoint
    return endpoint_bridge.resolve(
  File "C:\Program Files\Python310\lib\site-packages\botocore\client.py", line 613, in resolve
    resolved = self.endpoint_resolver.construct_endpoint(
  File "C:\Program Files\Python310\lib\site-packages\botocore\regions.py", line 229, in construct_endpoint
    result = self._endpoint_for_partition(
  File "C:\Program Files\Python310\lib\site-packages\botocore\regions.py", line 277, in _endpoint_for_partition
    raise NoRegionError()
botocore.exceptions.NoRegionError: You must specify a region.
